{"version":3,"sources":["skylark-domx-animates.js"],"names":["define","skylark","langx","mixin","fx","off","speeds","normal","fast","slow","attach","browser","noder","geom","styler","eventer","animates","animationName","animationDuration","animationTiming","animationEnd","normalizeCssEvent","cssReset","normalizeCssProperty","animate","elm","name","duration","ease","callback","delay","key","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","this","fired","hasScrollTop","isPlainObject","easing","complete","isString","undefined","isFunction","eace","properties","v","supportedTransforms","test","top","right","bottom","left","css","size","width","height","push","dasherize","transitionEnd","transform","transitionProperty","join","transitionDuration","transitionDelay","transitionTiming","event","target","currentTarget","call","on","debounce","clientLeft","scrollToTop","main"],"mappings":"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","file":"../skylark-domx-animates.js","sourcesContent":["define('skylark-domx-animates/animates',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n\r\n    function animates() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.animates\", animates);\r\n});\ndefine('skylark-domx-animates/animate',[\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"./animates\"\r\n], function(langx, browser, noder, geom, styler, eventer,animates) {\r\n\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, name, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = animates.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = animates.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (animates.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    return animates.animate = animate;\r\n\r\n});\ndefine('skylark-domx-animates/main',[\r\n\t\"./animates\",\r\n    \"./animate\"\r\n],function(animates){\r\n\r\n\treturn animates;\r\n});\ndefine('skylark-domx-animates', ['skylark-domx-animates/main'], function (main) { return main; });\n\n"]}